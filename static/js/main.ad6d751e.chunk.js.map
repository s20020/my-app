{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","country","name","uri","handleClick","bind","countries","names","window","fetch","this","then","res","json","map","v","translations","ja","push","population","capital","currencies","area","region","flag","setState","e","value","target","dataset","optionIndex","console","log","onChange","React","Component","Title","className","children","InputView","Paper","Autocomplete","id","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","variant","OutputView","currentcies","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAOMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,MAER,EAAKC,IAAM,uCACX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPD,E,qDAUpB,WACE,IAAMC,EAAY,GACZC,EAAQ,GACdC,OACGC,MAAMC,KAAKP,KACXQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAI,SAAAC,GACjBA,EAAEC,aAAaC,KACjBV,EAAMW,KAAKH,EAAEC,aAAaC,IAC1BX,EAAUY,KAAK,CAAEC,WAAYJ,EAAEI,WAAYC,QAASL,EAAEK,QAASC,WAAYN,EAAEM,WAAYC,KAAMP,EAAEO,KAAMC,OAAQR,EAAEQ,OAAQC,KAAMT,EAAES,cAGvId,KAAKe,SAAS,CAAElB,MAAOA,IACvBG,KAAKe,SAAS,CAAEnB,UAAWA,M,yBAG7B,SAAaoB,GACX,IAAMC,EAAQD,EAAEE,OAAOC,QAAQC,YAC/BpB,KAAKe,SAAS,CAAExB,QAASS,KAAKV,MAAMM,UAAUqB,KAC9CjB,KAAKe,SAAS,CAAEvB,KAAMQ,KAAKV,MAAMO,MAAMoB,O,oBAGzC,WAEE,OADAI,QAAQC,IAAItB,KAAKV,OAEf,qCACE,cAAC,EAAD,uCACA,cAAC,EAAD,CAAWiC,SAAUvB,KAAKN,YAAaE,UAAWI,KAAKV,MAAMM,UAAWC,MAAOG,KAAKV,MAAMO,QAC1F,cAAC,EAAD,CAAYN,QAASS,KAAKV,MAAMC,QAASC,KAAMQ,KAAKV,MAAME,c,GAvChDgC,IAAMC,WA6ClBC,EAAQ,SAAArC,GAAK,OAAI,qBAAKsC,UAAU,aAAf,SAA4B,6BAAKtC,EAAMuC,cAExDC,EAAY,SAAAxC,GAChB,OACE,qBAAKsC,UAAU,gBAAf,SACA,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,QAAS5C,EAAMQ,MACfqC,eAAgB,SAAAC,GAAM,OAAIA,GAC1BC,MAAO,CAAEC,MAAO,KAEhBd,SAAUlC,EAAMkC,SAChBe,YAAa,SAAAC,GAAM,OACjB,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,iCAAQC,QAAQ,sBAQjDC,EAAa,SAAAtD,GAEjB,OADAgC,QAAQC,IAAIjC,GAEV,mCACE,sBAAKsC,UAAU,YAAf,UACE,+BACA,cAACG,EAAA,EAAD,UAAO,6BAAI,oDAAazC,EAAME,QAAQkB,WAA3B,sBACX,cAACqB,EAAA,EAAD,UAAO,6BAAI,oDAAazC,EAAME,QAAQqB,KAA3B,yBACX,cAACkB,EAAA,EAAD,UAAO,6BAAI,oDAAazC,EAAME,QAAQmB,eACtC,cAACoB,EAAA,EAAD,UAAO,6BAAI,oDAAazC,EAAME,QAAQqD,mBACtC,cAACd,EAAA,EAAD,UAAO,6BAAI,oDAAazC,EAAME,QAAQsB,iBAEtC,qBAAKgC,IAAKxD,EAAME,QAAQuB,KAAMgC,IAAI,uBAO3B1D,ICjFA2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad6d751e.chunk.js","sourcesContent":["import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      country: [],\n      name: null\n    }\n    this.uri = 'https://restcountries.eu/rest/v2/all'\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  componentDidMount () {\n    const countries = []\n    const names = []\n    window\n      .fetch(this.uri)\n      .then(res => res.json())\n      .then(json => json.map(v => {\n        if (v.translations.ja) {\n          names.push(v.translations.ja)\n          countries.push({ population: v.population, capital: v.capital, currencies: v.currencies, area: v.area, region: v.region, flag: v.flag })\n        }\n      }))\n    this.setState({ names: names })\n    this.setState({ countries: countries })\n  }\n\n  handleClick (e) {\n    const value = e.target.dataset.optionIndex\n    this.setState({ country: this.state.countries[value] })\n    this.setState({ name: this.state.names[value] })\n  }\n\n  render () {\n    console.log(this.state)\n    return (\n      <>\n        <Title>世界の国</Title>\n        <InputView onChange={this.handleClick} countries={this.state.countries} names={this.state.names} />\n        <OutputView country={this.state.country} name={this.state.name} />\n      </>\n    )\n  }\n}\n\nconst Title = props => <div className='main title'><h1>{props.children}</h1></div>\n\nconst InputView = props => {\n  return (\n    <div className='main selecter'>\n    <Paper>\n      <Autocomplete\n        id='combo-box-demo'\n        options={props.names}\n        getOptionLabel={option => option}\n        style={{ width: 300 }}\n        \n        onChange={props.onChange}\n        renderInput={params => (\n          <TextField {...params} label='国を選ぼう' variant='outlined' />\n        )}\n      />\n    </Paper>\n    </div>\n  )\n}\n\nconst OutputView = props => {\n  console.log(props)\n  return (\n    <>\n      <div className='main view'>\n        <ul>\n        <Paper><li><strong>人口: {props.country.population}      人</strong></li></Paper>\n        <Paper><li><strong>面積: {props.country.area}            km2</strong></li></Paper>\n        <Paper><li><strong>首都: {props.country.capital}</strong></li></Paper>\n        <Paper><li><strong>通貨: {props.country.currentcies}</strong></li></Paper>\n        <Paper><li><strong>地域: {props.country.region}</strong></li></Paper>\n        </ul>\n        <img src={props.country.flag} alt=\"国旗\"  />\n      </div>\n\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}